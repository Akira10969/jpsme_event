name: Code Quality Check

on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: PHP Lint & Code Style
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, gd
        tools: composer, phpcs, phpstan
        
    - name: PHP Syntax Check
      run: |
        echo "üîç Checking PHP syntax..."
        find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \; | tee syntax-check.log
        if grep -q "Parse error\|Fatal error" syntax-check.log; then
          echo "‚ùå PHP syntax errors found!"
          exit 1
        else
          echo "‚úÖ PHP syntax check passed!"
        fi
        
    - name: Check file permissions
      run: |
        echo "üîí Checking file permissions..."
        # Check for files that shouldn't be executable
        find . -name "*.php" -perm /111 -not -path "./vendor/*" | tee executable-php.log
        if [ -s executable-php.log ]; then
          echo "‚ö†Ô∏è Found executable PHP files (may be intentional):"
          cat executable-php.log
        fi
        
        # Check for world-writable files
        find . -perm -002 -not -path "./vendor/*" -not -path "./.git/*" | tee world-writable.log
        if [ -s world-writable.log ]; then
          echo "‚ùå Found world-writable files:"
          cat world-writable.log
          exit 1
        else
          echo "‚úÖ File permissions check passed!"
        fi
        
    - name: Check for hardcoded credentials
      run: |
        echo "üîê Scanning for potential hardcoded credentials..."
        # Look for common patterns of hardcoded credentials
        grep -r -i --include="*.php" -E "(password|passwd|pwd|secret|key|token)\s*=\s*['\"][^'\"]{3,}" . || true
        grep -r -i --include="*.php" -E "mysql://|postgresql://|mongodb://" . || true
        echo "‚úÖ Credential scan completed (review output above)"
        
    - name: Validate HTML structure
      run: |
        echo "üåê Basic HTML structure validation..."
        # Check for common HTML issues
        grep -r --include="*.php" -n "<!DOCTYPE" . | head -10
        echo "‚úÖ HTML structure check completed"

  # File structure validation
  structure-check:
    runs-on: ubuntu-latest
    name: Project Structure Validation
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check required files
      run: |
        echo "üìÇ Checking project structure..."
        
        required_files=(
          "index.php"
          "registration_form.php"
          "machine_design_registration.php"
          "quizbee_registration.php"
          "submit_registration.php"
          "db.php"
          "registration.sql"
          "404.php"
          "success.php"
          "assets/style.css"
          ".htaccess"
          "README.md"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "‚ùå Missing required files:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        else
          echo "‚úÖ All required files present!"
        fi
        
    - name: Check upload directories
      run: |
        echo "üìÅ Checking upload directory structure..."
        
        required_dirs=(
          "uploads"
          "fav"
          "assets"
        )
        
        for dir in "${required_dirs[@]}"; do
          if [ ! -d "$dir" ]; then
            echo "‚ö†Ô∏è Directory $dir does not exist, creating..."
            mkdir -p "$dir"
          else
            echo "‚úÖ Directory $dir exists"
          fi
        done
        
    - name: Check .htaccess configuration
      run: |
        echo "‚öôÔ∏è Validating .htaccess configuration..."
        if [ -f ".htaccess" ]; then
          echo "‚úÖ .htaccess file exists"
          echo "üìã .htaccess content preview:"
          head -20 .htaccess
        else
          echo "‚ùå .htaccess file missing!"
          exit 1
        fi
