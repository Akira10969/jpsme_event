name: Automated Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: jpsme_event_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, gd
        tools: composer, phpunit
        
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" --silent; do
          sleep 1
        done
        
    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -u root -proot jpsme_event_test < registration.sql
        echo "Test database setup completed!"
        
    - name: Create test configuration
      run: |
        cat > test_db.php << 'EOF'
        <?php
        // Test database configuration
        $host = '127.0.0.1';
        $db = 'jpsme_event_test';
        $user = 'root';
        $pass = 'root';

        $conn = new mysqli($host, $user, $pass, $db);
        if ($conn->connect_error) {
            die('Connection failed: ' . $conn->connect_error);
        }
        ?>
        EOF
        
    - name: Run database connection test
      run: |
        php -r "
        include 'test_db.php';
        echo 'Database connection: ';
        if (\$conn->ping()) {
            echo 'SUCCESS\n';
        } else {
            echo 'FAILED\n';
            exit(1);
        }
        "
        
    - name: Test form submission simulation
      run: |
        php -r "
        \$_POST = [
            'competition_type' => 'Machine Design',
            'university' => 'Test University',
            'member_names' => ['John Doe', 'Jane Smith'],
            'coach_name' => 'Dr. Test Coach',
            'prc_license' => 'PRC123456',
            'prc_reg_date' => '2024-01-01',
            'prc_exp_date' => '2025-12-31',
            'payment_reference' => 'REF123'
        ];
        
        \$_FILES = [
            'proof_natcon' => ['tmp_name' => '', 'name' => 'test.pdf'],
            'proof_payment' => ['tmp_name' => '', 'name' => 'payment.jpg'],
            'member_enrollments' => ['tmp_name' => ['', ''], 'name' => ['enrollment1.pdf', 'enrollment2.pdf']]
        ];
        
        echo 'Form data simulation: SUCCESS\n';
        "

  # Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: unit-tests
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: jpsme_event_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP with built-in server
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, gd
        
    - name: Setup test environment
      run: |
        # Setup database
        mysql -h 127.0.0.1 -u root -proot jpsme_event_test < registration.sql
        
        # Create test db config
        cat > db.php << 'EOF'
        <?php
        $host = '127.0.0.1';
        $db = 'jpsme_event_test';
        $user = 'root';
        $pass = 'root';

        $conn = new mysqli($host, $user, $pass, $db);
        if ($conn->connect_error) {
            die('Connection failed: ' . $conn->connect_error);
        }
        ?>
        EOF
        
        # Create upload directories
        mkdir -p uploads/proof_natcon uploads/member_enrollments uploads/proof_payment
        chmod 755 uploads uploads/proof_natcon uploads/member_enrollments uploads/proof_payment
        
    - name: Start PHP built-in server
      run: |
        php -S localhost:80 &
        sleep 3
        
    - name: Test page accessibility
      run: |
        echo "üåê Testing page accessibility..."
        
        pages=(
          "index.php"
          "machine_design_registration.php"
          "quizbee_registration.php"
          "404.php"
        )
        
        for page in "${pages[@]}"; do
          echo "Testing $page..."
          response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost/$page")
          if [ "$response" == "200" ]; then
            echo "‚úÖ $page: OK"
          else
            echo "‚ùå $page: HTTP $response"
            exit 1
          fi
        done
        
    - name: Test form rendering
      run: |
        echo "üìù Testing form rendering..."
        # Test Machine Design form
        content=$(curl -s "http://localhost/machine_design_registration.php")
        if echo "$content" | grep -q "Machine Design Registration"; then
          echo "‚úÖ Machine Design form renders correctly"
        else
          echo "‚ùå Machine Design form rendering failed"
          exit 1
        fi
        # Test Quizbee form
        content=$(curl -s "http://localhost/quizbee_registration.php")
        if echo "$content" | grep -q "Quizbee Registration"; then
          echo "‚úÖ Quizbee form renders correctly"
        else
          echo "‚ùå Quizbee form rendering failed"
          exit 1
        fi
        
    - name: Test CSS and assets
      run: |
        echo "üé® Testing CSS and assets..."
        # Test CSS file
        response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost/assets/style.css")
        if [ "$response" == "200" ]; then
          echo "‚úÖ CSS file accessible"
        else
          echo "‚ùå CSS file not accessible: HTTP $response"
          exit 1
        fi
        # Test favicon
        response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost/fav/favicon.ico")
        if [ "$response" == "200" ]; then
          echo "‚úÖ Favicon accessible"
        else
          echo "‚ö†Ô∏è Favicon not accessible: HTTP $response (this is okay if file doesn't exist)"
        fi

  # Performance Tests
  performance-tests:
    runs-on: ubuntu-latest
    name: Performance Tests
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, gd
        
    - name: Install Apache Bench
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2-utils
        
    - name: Start PHP server
      run: |
        php -S localhost:80 &
        sleep 3
        
    - name: Run load tests
      run: |
        echo "‚ö° Running performance tests..."
        # Test main page load time
        echo "Testing index.php load time..."
        ab -n 100 -c 5 http://localhost/index.php
        echo "Testing registration form load time..."
        ab -n 50 -c 3 http://localhost/machine_design_registration.php
        echo "‚úÖ Performance tests completed!"
